{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sndpp\\\\Desktop\\\\react-practice\\\\router_2\\\\src\\\\components\\\\Formm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    contact: '',\n    description: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const submitData = async event => {\n    event.preventDefault();\n    const {\n      name,\n      contact,\n      email,\n      description\n    } = formData;\n    if (name && contact && email && description) {\n      try {\n        const res = await fetch(\"https://practice-c217b-default-rtdb.firebaseio.com/contacts.json\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            contact,\n            description\n          })\n        });\n        if (res.ok) {\n          setFormData({\n            name: \"\",\n            email: \"\",\n            contact: \"\",\n            description: \"\"\n          });\n          alert(\"Data Stored\");\n        } else {\n          alert(\"Failed to store data\");\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert(\"Error submitting form, please try again.\");\n      }\n    } else {\n      alert(\"Please fill in all the data\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 mx-1 h-auto bg-gradient-to-r from-teal-400 via-blue-500 to-purple-600  flex items-center justify-center min-h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"JmGYrbPbFfRRdjIpghDd9C4esVc=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","name","email","contact","description","handleChange","e","value","target","submitData","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sndpp/Desktop/react-practice/router_2/src/components/Formm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Form() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    contact: '',\r\n    description: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const submitData = async (event) => {\r\n    event.preventDefault();\r\n    const { name, contact, email, description } = formData;\r\n\r\n    if (name && contact && email && description) {\r\n      try {\r\n        const res = await fetch(\r\n          \"https://practice-c217b-default-rtdb.firebaseio.com/contacts.json\", \r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              name,\r\n              email,\r\n              contact,\r\n              description,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (res.ok) {\r\n          setFormData({\r\n            name: \"\",\r\n            email: \"\",\r\n            contact: \"\",\r\n            description: \"\"\r\n          });\r\n          alert(\"Data Stored\");\r\n        } else {\r\n          alert(\"Failed to store data\");\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        alert(\"Error submitting form, please try again.\");\r\n      }\r\n    } else {\r\n      alert(\"Please fill in all the data\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6 mx-1 h-auto bg-gradient-to-r from-teal-400 via-blue-500 to-purple-600  flex items-center justify-center min-h-screen\">\r\n \r\n</div>\r\n\r\n\r\n\r\n\r\n  );\r\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEL,IAAI;MAAEM;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCR,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACE,IAAI,GAAGM;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAM;MAAEV,IAAI;MAAEE,OAAO;MAAED,KAAK;MAAEE;IAAY,CAAC,GAAGL,QAAQ;IAEtD,IAAIE,IAAI,IAAIE,OAAO,IAAID,KAAK,IAAIE,WAAW,EAAE;MAC3C,IAAI;QACF,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CACrB,kEAAkE,EAClE;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBjB,IAAI;YACJC,KAAK;YACLC,OAAO;YACPC;UACF,CAAC;QACH,CACF,CAAC;QAED,IAAIQ,GAAG,CAACO,EAAE,EAAE;UACVnB,WAAW,CAAC;YACVC,IAAI,EAAE,EAAE;YACRC,KAAK,EAAE,EAAE;YACTC,OAAO,EAAE,EAAE;YACXC,WAAW,EAAE;UACf,CAAC,CAAC;UACFgB,KAAK,CAAC,aAAa,CAAC;QACtB,CAAC,MAAM;UACLA,KAAK,CAAC,sBAAsB,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BD,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC;EAA2H;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzI,CAAC;AAMN;AAAC7B,EAAA,CAnEuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}