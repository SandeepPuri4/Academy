{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst formSlice = createSlice({\n  name: 'form',\n  initialState: {\n    isOpen: false,\n    formData: {\n      name: '',\n      email: '',\n      contact: '',\n      description: ''\n    }\n  },\n  reducers: {\n    openForm: state => {\n      state.isOpen = true;\n    },\n    closeForm: state => {\n      state.isOpen = false;\n    },\n    updateFormData: (state, action) => {\n      state.formData = {\n        ...state.formData,\n        ...action.payload\n      };\n    },\n    resetFormData: state => {\n      state.formData = {\n        name: '',\n        email: '',\n        contact: '',\n        description: ''\n      };\n    }\n  }\n});\nexport const scrollSlice = createSlice({\n  name: 'scroll',\n  initialState: {\n    scrollRef: null\n  },\n  reducers: {\n    setScrollRef: (state, action) => {\n      state.scrollRef = action.payload;\n    }\n  }\n});\nexport const {\n  setScrollRef\n} = scrollSlice.actions;\nexport const selectScrollRef = state => state.scroll.scrollRef;\nexport const {\n  openForm,\n  closeForm,\n  updateFormData,\n  resetFormData\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","formSlice","name","initialState","isOpen","formData","email","contact","description","reducers","openForm","state","closeForm","updateFormData","action","payload","resetFormData","scrollSlice","scrollRef","setScrollRef","actions","selectScrollRef","scroll","reducer"],"sources":["C:/Users/sndpp/Desktop/react-practice/router_2/src/store/formSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst formSlice = createSlice({\r\n  name: 'form',\r\n  initialState: {\r\n    isOpen: false,\r\n    formData: {\r\n      name: '',\r\n      email: '',\r\n      contact: '',\r\n      description: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    openForm: (state) => {\r\n      state.isOpen = true;\r\n    },\r\n    closeForm: (state) => {\r\n      state.isOpen = false;\r\n    },\r\n    updateFormData: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload };\r\n    },\r\n    resetFormData: (state) => {\r\n      state.formData = {\r\n        name: '',\r\n        email: '',\r\n        contact: '',\r\n        description: '',\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const scrollSlice = createSlice({\r\n  name: 'scroll',\r\n  initialState: {\r\n    scrollRef: null,\r\n  },\r\n  reducers: {\r\n    setScrollRef: (state, action) => {\r\n      state.scrollRef = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setScrollRef } = scrollSlice.actions;\r\n\r\nexport const selectScrollRef = (state) => state.scroll.scrollRef;\r\n\r\n\r\n\r\n\r\nexport const { openForm, closeForm, updateFormData, resetFormData } = formSlice.actions;\r\n\r\nexport default formSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;MACRH,IAAI,EAAE,EAAE;MACRI,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACP,MAAM,GAAG,IAAI;IACrB,CAAC;IACDQ,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACP,MAAM,GAAG,KAAK;IACtB,CAAC;IACDS,cAAc,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MACjCH,KAAK,CAACN,QAAQ,GAAG;QAAE,GAAGM,KAAK,CAACN,QAAQ;QAAE,GAAGS,MAAM,CAACC;MAAQ,CAAC;IAC3D,CAAC;IACDC,aAAa,EAAGL,KAAK,IAAK;MACxBA,KAAK,CAACN,QAAQ,GAAG;QACfH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE;MACf,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAMS,WAAW,GAAGjB,WAAW,CAAC;EACrCE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZe,SAAS,EAAE;EACb,CAAC;EACDT,QAAQ,EAAE;IACRU,YAAY,EAAEA,CAACR,KAAK,EAAEG,MAAM,KAAK;MAC/BH,KAAK,CAACO,SAAS,GAAGJ,MAAM,CAACC,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAa,CAAC,GAAGF,WAAW,CAACG,OAAO;AAEnD,OAAO,MAAMC,eAAe,GAAIV,KAAK,IAAKA,KAAK,CAACW,MAAM,CAACJ,SAAS;AAKhE,OAAO,MAAM;EAAER,QAAQ;EAAEE,SAAS;EAAEC,cAAc;EAAEG;AAAc,CAAC,GAAGf,SAAS,CAACmB,OAAO;AAEvF,eAAenB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}